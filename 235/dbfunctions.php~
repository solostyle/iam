<?php

//----------------------------------------------------------------------------
// Business Database functions -----------------------------------------------
// ---------------------------------------------------------------------------


// Connect to the database 
function select_db($server, $usr, $pw, $dbname) {
   mysql_connect($server,$usr,$pw) or die("Couldn't connect!<br />");
   mysql_select_db($dbname);
}


// Retrieve one entry
// returns the data row
// 6 feb 09: changed the input parameters because we have one table now
function get_entry($tag) {
	$result = mysql_query("SELECT * FROM `blog` WHERE `id` = '$tag'");
	$entry = mysql_fetch_array($result, MYSQL_NUM);
	mysql_free_result($result);
	if (!$entry) print("That entry doesn't exist anymore!");
	return $entry;
}


// Show (preview) the new entries since last sign in
// 6 feb 09: simplified to use one table only
function show_new($last_time, $user_id) {

	$time_limit = "WHERE (`time` > '$last_time')";

	$getentries = "SELECT * FROM `blog` $time_limit ORDER BY `time` DESC";
	$entrieslist = mysql_query($getentries);

	$content = ""; //content accumulator
	//$num_entries = mysql_num_rows($entrieslist);
	while ($entryarray = mysql_fetch_array($entrieslist)) {
		$content .= show_preview($entryarray);
	}
	mysql_free_result($entrieslist);
	return $content;
}


// Display desired # of most recent post titles or entries
// 6 feb 09: simplified to use only one table (blog)
function preview_recent($lim) {
	$content = "";	// content accumulator
	$getentries = "SELECT * FROM `blog` ORDER BY `time` DESC LIMIT $lim";
	$entrieslist = mysql_query($getentries);
	while ($entryarray = mysql_fetch_array($entrieslist)) {
		$content .= show_preview($entryarray);
	}
	mysql_free_result($entrieslist);
	return $content;
}


// Show all entries within a category
// 6 feb 09: need to join to blog_category table!
// 7 feb 09: need to test query
function show_category_entries($category) {
	$getentries = "
		SELECT b.*
		FROM `blog_category` a
			, `blog` b
		WHERE b.`id` = a.`blog_id`
		AND a.`category_nm` = '" . $category . "'";
	$entrieslist = mysql_query($getentries);
	$content = "";
	while ($entryarray = mysql_fetch_array($entrieslist)) 
		$content .= show_preview($entryarray);

	mysql_free_result($entrieslist);
	return $content;
}


//Display entries to edit or view
//6 feb 09: this function should simply show whatever you want to see
//	based on the starting date and the ending date
function show_entries_by_time($start, $end, $content_to_show) {
	$entrieslist = get_entries_by_time($start, $end);
	$content = "";
	while ($entryarray = mysql_fetch_array($entrieslist)) {
		switch ($content_to_show) {
			case "show": //used by weekly archive.php
				$content .= show_preview($entryarray);
				break;
			case "republish":
				$content .= list_entry_republish($entryarray);
				break;
		}
	}
	mysql_free_result($entrieslist);
	return $content;
}

// Retrieves a list of entries within a given range
// 7 feb 09: created
function get_entries_by_time($start, $end) {
	$getentries = "
		SELECT * FROM `blog` 
		WHERE `time` >= '" . $start . "' 
		AND `time` <= '" . $end . "' 
		ORDER BY `time` DESC;
	";
	$entrieslist = mysql_query($getentries);
	return $entrieslist;
}


// Return the date of the first blog entry
// 7 feb 09: created
function blog_first_date() {
	$query = "SELECT `time` FROM `blog` ORDER BY `time` ASC LIMIT 1";
	$result = mysql_query($query);
	$row = mysql_fetch_array($result);
	return $row[0];
}


// Return the date of the last blog entry
// 7 feb 09: created
function blog_last_date() {
	$query = "SELECT `time` FROM `blog` ORDER BY `time` DESC LIMIT 1";
	$result = mysql_query($query);
	$row = mysql_fetch_array($result);
	return $row[0];
}



//----------------------------------------------------------------------------
// Basic Database Functions --------------------------------------------------
// ---------------------------------------------------------------------------


// Delete an entry
// 6 feb 09: simplified function
function delete_record($tag) {
	mysql_query("DELETE FROM `blog` WHERE `id` = '$tag'");
}


// Update an entry
// 6 feb 09: changed the input parameters because we have one table now
function update_record($fields,$values,$id) {
	$sqlstatement = "UPDATE `blog` SET `$fields[0]` = '$values[0]'";
	for ($i=1; $i<=count($fields)-1; $i++)
		$sqlstatement .= ", `$fields[$i]` = '$values[$i]'";
	$sqlstatement .= " WHERE `$fields[0]` = '$id'";
	mysql_query($sqlstatement);
}


// Insert a Record
// takes a tablename and two arrays
function insert_record($tablename,$fields,$values) {
   if (count($fields) != count($values)) {
      print("Error: length of arrays are not equal.");
      print count($fields);
      print count($values);
   }
   else {
      $sqlstatement = "INSERT INTO `$tablename` (`$fields[0]`";
      for ($i=1; $i<=count($fields)-1; $i++)
         $sqlstatement .= ",`$fields[$i]`";
      $sqlstatement .= ") Values ('$values[0]'";
      for ($j=1; $j<=count($values)-1; $j++)
         $sqlstatement .= ",'$values[$j]'";
      $sqlstatement .= ");";
print $sqlstatement;
      mysql_query($sqlstatement);
     }
}


// Associate an entry to a category
// 6 feb 09: created
function insert_category($blog_id, $category_nm) {




}

?>
<?

//----------------------------------------------------------------------------
// Possibly unused? ----------------------------------------------------------
// ---------------------------------------------------------------------------


// Generates a password with no ambiguous characters
function gen_pw($length) {
	//warning: i took out ambiguous-looking characters
	$template = "23456789abcdefghjkmnopqrstuvwxyzABCDEFGHJKMNPQRSTUVWXYZ!@#$%^&*()[]{}|?~";

	for ($a = 0; $a < $length; $a++) {
		   $b = rand(0, strlen($template) - 1);
		   $pw .= $template[$b];
	}

	return $pw;
}


function randomkey($length) {
   $pattern = "1234567890abcdefghijklmnopqrstuvwxyz";
   for($i=0;$i<$length;$i++) {
     $key .= $pattern{rand(0,35)};
   }
   return $key;
}

?>
